sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
library(datasets)
data(iris)
?iris
Sepal.Length(iris)
iris(Sepal.Length)
iris[Sepal.Length=="virginica"]
head(iris)
x<-subset(iris,Species=="virginica")
x
sapply(x,mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
y<-apply(mtcars, 2, mean)
y
z<-split(mtcars, mtcars$cyl)
z
w<-with(mtcars, tapply(mpg, cyl, mean))
w
q<-tapply(mtcars$cyl, mtcars$mpg, mean)
q
debug(ls)
ls(1,10)
exit
quit
quit()
head(mtcars)
x<-subset(mtcars,cyl=6)
x<-subset(mtcars,cyl=4)
y<-subset(mtcars,cyl=8)
dif<-sapply(y,mean)-sapply(x,mean)
dif
xm<-mean(x["hp"])
xm<-mean(x$hp)
xm<-mean(y$hp)
ym<-mean(y$hp)
xm<-mean(x$hp)
x
y
library(datasets)
data(mtcars)
x<-subset(mtcars,cyl=4)
x
x<-subset(mtcars,cyl="4")
x
mtcars
x<-subset(mtcars,mtcars$cyl="4")
x<-subset(mtcars,mtcars$cyl=4)
x<-subset(mtcars,mtcars$cyl==4)
x
y<-subset(mtcars,mtcars$cyl==8)
dif<-mean(y["hp"])-mean(x["hp"])
dif<-mean(y$hp)-mean(x$hp)
dif
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
library(swirl)
swirl()
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population, flags$red, summary)
summary(population)
summary("population")
tapply(flags$population,flags$landmass,summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head9plants,10
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
library(genalg)
library(ggplot2)
package?
()
install.packages("genalg")
install.packages("ggplot2")
library(genalg)
library(ggplot2)
dataset <- data.frame(item = c("pocketknife", "beans", "potatoes", "unions",
"sleeping bag", "rope", "compass"), survivalpoints = c(10, 20, 15, 2, 30,
10, 30), weight = c(1, 5, 10, 1, 7, 5, 1))
weightlimit <- 20
dataset
evalFunc <- function(x) {
current_solution_survivalpoints <- x %*% dataset$survivalpoints
current_solution_weight <- x %*% dataset$weight
if (current_solution_weight > weightlimit)
return(0) else return(-current_solution_survivalpoints)
}
iter = 100
GAmodel <- rbga.bin(size = 7, popSize = 200, iters = iter, mutationChance = 0.01,
elitism = T, evalFunc = evalFunc)
cat(summary.rbga(GAmodel))
x<-{1 2 3 4 5 6 7 8 9 10}
y<-numeric(15)
y<-numeric(1:15)
y[1]<-1
y[2]<2
y[2]<-2
for(i in 1:length(y)){y[i]<-i}
makeVektor(y)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVektor(y)
makeVector(y)
makeVector$get
makeVector$get()
get
get()
get(x)
get(y)
x={1 2,3 5}
B = matrix(
+   c(2, 4, 3, 1, 5, 7),
+   nrow=3,
+   ncol=2)
B = matrix(c(2, 4, 3, 1, 5, 7),  nrow=3,  ncol=2)
B
B<-b(1:2,1:2)
B<-b(1:2,1:2)
B<-B(1:2,1:2)
B = matrix(c(2, 4, 3, 1),  nrow=2,  ncol=2)
solve(B)
B*solve(B)
solve(B)*B
install.packages("swirl")
library(swirl)
swirl()
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
flips<-sample(0:1,100,replace=TRUE,prob=c(0.3,0.7))
flips<-sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1,size=100,prob=0.7)
flips2<-rbinom(1,size=100,prob=0.7)
flips2<-rbinom(n=100,size=1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,mean=100,sd=25)
?rpois
rpois(5,10)
replicate(100,rpois(5,10))
my_pois<-replicate(100,rpois(5,10))
my_pois
colMeans(my_pois)
cm<-colMeans(my_pois)
hist(cm)
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
unclass(t1)
t1
class(t1)
unclass(t1)
as.POSIXlt(Sys.time())
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time()-t1
difftime(Sys.time(),t1,units='days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed, y=cars$dist)
plot()
plot(dist,speed)
plot(cars$dist,cras$speed)
plot(cars$dist,cars$speed)
plot(x=speed,y=cars$dist)
plot(cars$dist,cars$speed,"Speed")
plot(x=cars$speed,y=cars$dist,clab="Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed",ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, lab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed",ylab="Stopping Distance")
?plot
plot(x = cars$speed, y = cars$dist, main="main")
plot(x = cars$speed, y = cars$dist, main="main")
windows()
?windows
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(ggplot2)
qplot(votes, rating, data = movies)
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
install.packages("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm,color="blue")
boxplot(ppm,col="blue")
abline(h=12)
hist(ppm,col="green")
rug(ppm)
rug(low)
low
high
hist(ppm,col="green",breaks=100)
rug(ppm)
hist(ppm,col="green")
abline(v=12,lwd=2)
abline(v=median(ppm),col="magenta",lwd=4)
names(pollution)
reg<-pollution$region
reg<-table(pollution$region)
reg
barplot(reg,col="wheat",main="Number of Vounties in Each Region")
barplot(reg,col="wheat",main="Number of Counties in Each Region")
boxplot(pollution,col="red",pm25~region)
boxplot(pollution,col="red","pm25"~region)
boxplot(pollution,pm25~region, col="red")
boxplot(pm25~region,data=pollution, col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east<-subset(pollution,region="east")
east<-subset(pollution,region=="east")
head(east)
hist(east,col="green")
hist(east$pm25,col="green")
hist(subset(pollution,region=="west")$pm25,col="green")
plot(pm25,latitude)
plot(pollution$pm25,pollution$latitude)
with(pollution,plot(latitude,pm25))
abline(lwd=2,lty=2)
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude,ppm,col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(c(1,2),mar = c(5,4,2,1))
par(mfrow=c(1,2),mar = c(5,4,2,1))
west<-subset(pollution,pollution$region=="west")
west<-subset(pollution,region=="west")
plot(west$latitude,west$pm25,main="West")
plot(east$latitude,east$pm25,main="east")
plot(east$latitude,east$pm25,main="East")
?Devices
with(faithful,plot(eruptions,waiting))
title("Old Faithful Heyser data")
title("Old Faithful Geyser data")
dev.curr()
dev.cur()
pdf(file="myplot.pdf")
with(faithful,plot(eruptions,waiting))
title("Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions,waiting))
title("Old Faithful Geyser data")
dev.copy(png,file="geyserplot.png")
dev.off()
head(cars)
with(cars,plot(speed,distance))
with(cars,plot(speed,dist))
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp~Income|region,state$Income,layout=c(4,1))
xyplot(Life.Exp~Income|region,state,layout=c(4,1))
xyplot(Life.Exp~Income|region,state,layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ,hwy,data=mpg)
head(airquality)
range(airquality$Ozone,na.rm=TRUE)
hist(airquality$Ozone)
boxplot(airquality$Month)
table(airquality$Month)
boxplot(Ozone~Month,airquality)
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb"),col="red")
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)",col="red")
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)",col.axis="blue",col="red")
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title("Ozone and Wind in New York City")
with(airquality,plot(Wind,Ozone))
title(main="Ozone and Wind in New York City")
par()
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind,airquality$Ozone,type.set="n")
plot(airquality$Wind,type="n",airquality$Ozone)
title("Wind and Ozone in NYC")
may<-subset(airquality,Month==5)
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay<-subset(airquality,Month<>5)
notmay<-subset(airquality,Month!=5)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
vln(median(airquality$Wind),lty=2,width=2)
abline(median(airquality$Wind),lty=2,width=2)
?abline
abline(v=median(airquality$Wind),lty=2,width=2)
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Wind,airquality$Solar.R,main="Ozone and Solar Radiation")
par(mfrow=c(1,3),mar=c(4,4,2,1),oma=c(0,0,2,0))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Wind,airquality$Solar.R,main="Ozone and Solar Radiation")
plot(airquality$Solar.R,airquality$Wind,main="Ozone and Solar Radiation")
plot(airquality$Solar.R,airquality$Ozone,main="Ozone and Solar Radiation")
plot(airquality$Temp,airquality$Ozone,main="Ozone and Temperature")
mtext("Ozone and Weather in New York City",outer=TRUE)
bye()
setwd("exdata_plotting1")
# read the file
myData<-read.csv("household_power_consumption.txt", header = TRUE,sep = ";",
na.strings="?",
colClasses = c("character","character","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric"))
#myData<-read.csv("household_power_consumption.txt", header = TRUE,sep = ";")
#read the first day data
myD1<-subset(myData,Date=="1/2/2007")
#read the second day data
myD2<-subset(myData,Date=="2/2/2007")
#change the data format for both
myD1$Date<-"2007-02-01"
myD2$Date<-"2007-02-02"
#delete the BIG data
rm("myData")
#put the two days in one dataframe
myData<-rbind(myD1,myD2)
#delete the dataframes not used
rm("myD1")
rm("myD2")
# transform the date in date format
myData$Date<-strptime(paste(myData$Date,myData$Time),"%Y-%m-%d %H:%M:%S")
plot(myData$Date,myData$Sub_metering_1,ylab="Energy sub metering",
xlab="",pch="|")
head(myData)
points(myData$Date,myData$Sub_metering_2,col="red")
points(myData$Date,myData$Sub_metering_3,col="blue")
plot(myData$Date,myData$Sub_metering_1,ylab="Energy sub metering",
xlab="",pch="|")
points(myData$Date,myData$Sub_metering_2,col="red",pch="|")
points(myData$Date,myData$Sub_metering_3,col="blue",pch="|")
plot(myData$Date,myData$Sub_metering_1,ylab="Energy sub metering",
xlab="",pch=".")
points(myData$Date,myData$Sub_metering_2,col="red",pch=".")
points(myData$Date,myData$Sub_metering_3,col="blue",pch=".")
plot(myData$Date,myData$Sub_metering_1,ylab="Energy sub metering",
xlab="",pch="|")
points(myData$Date,myData$Sub_metering_2,col="red",pch="|")
points(myData$Date,myData$Sub_metering_3,col="blue",pch="|")
legend("topright")
plot(myData$Date,myData$Sub_metering_1,ylab="Energy sub metering",
xlab="",pch="|")
points(myData$Date,myData$Sub_metering_2,col="red",pch="|")
points(myData$Date,myData$Sub_metering_3,col="blue",pch="|")
legend("topright",col=c("gray","red","blue",legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3")))
legend("topright",col=c("gray","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
legend("topright",pch=c("-","-","-"),col=c("gray","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
png('plot3.png',width=480, height=480)
plot(myData$Date,myData$Sub_metering_1,ylab="Energy sub metering",
xlab="",pch="|")
points(myData$Date,myData$Sub_metering_2,col="red",pch="|")
points(myData$Date,myData$Sub_metering_3,col="blue",pch="|")
legend("topright",pch=c("-","-","-"),col=c("gray","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
dev.off()
plot(myData$Date,myData$Sub_metering_1,type=".",ylab="Energy sub metering",
xlab="")
plot(myData$Date,myData$Sub_metering_1,type="p",ylab="Energy sub metering",
xlab="")
plot(myData$Date,myData$Sub_metering_1,type="l",ylab="Energy sub metering",
xlab="")
points(myData$Date,myData$Sub_metering_2,col="red",type="l")
plot(myData$Date,myData$Sub_metering_1,type="l",col="gray",ylab="Energy sub metering",
xlab="")
points(myData$Date,myData$Sub_metering_2,col="red",type="l")
plot(myData$Date,myData$Sub_metering_1,type="l",col="gray",ylab="Energy sub metering",
xlab="")
points(myData$Date,myData$Sub_metering_2,col="red",type="l")
points(myData$Date,myData$Sub_metering_3,col="blue",type="l")
legend("topright",pch=c("-","-","-"),col=c("gray","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
# read the file
myData<-read.csv("household_power_consumption.txt", header = TRUE,sep = ";",
na.strings="?",
colClasses = c("character","character","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric"))
#myData<-read.csv("household_power_consumption.txt", header = TRUE,sep = ";")
#read the first day data
myD1<-subset(myData,Date=="1/2/2007")
#read the second day data
myD2<-subset(myData,Date=="2/2/2007")
#change the data format for both
myD1$Date<-"2007-02-01"
myD2$Date<-"2007-02-02"
#delete the BIG data
rm("myData")
#put the two days in one dataframe
myData<-rbind(myD1,myD2)
#delete the dataframes not used
rm("myD1")
rm("myD2")
# transform the date in date format
myData$Date<-strptime(paste(myData$Date,myData$Time),"%Y-%m-%d %H:%M:%S")
png('plot3.png',width=480, height=480)
plot(myData$Date,myData$Sub_metering_1,type="l",col="gray",ylab="Energy sub metering",
xlab="")
points(myData$Date,myData$Sub_metering_2,col="red",type="l")
points(myData$Date,myData$Sub_metering_3,col="blue",type="l")
legend("topright",pch=c("-","-","-"),col=c("gray","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
dev.off()
# read the file
myData<-read.csv("household_power_consumption.txt", header = TRUE,sep = ";",
na.strings="?",
colClasses = c("character","character","numeric","numeric","numeric",
"numeric","numeric","numeric","numeric"))
#myData<-read.csv("household_power_consumption.txt", header = TRUE,sep = ";")
#read the first day data
myD1<-subset(myData,Date=="1/2/2007")
#read the second day data
myD2<-subset(myData,Date=="2/2/2007")
#change the data format for both
myD1$Date<-"2007-02-01"
myD2$Date<-"2007-02-02"
#delete the BIG data
rm("myData")
#put the two days in one dataframe
myData<-rbind(myD1,myD2)
#delete the dataframes not used
rm("myD1")
rm("myD2")
# transform the date in date format
myData$Date<-strptime(paste(myData$Date,myData$Time),"%Y-%m-%d %H:%M:%S")
png('plot2.png',width=480, height=480)
plot(myData$Date,myData$Global_active_power,ylab="Global Active Power (kilowatts)",
xlab="",type="l")
dev.off()
